# Nombre (Integracion Continua)
name: CI
on:
 push:
 workflow_dispatch:

jobs:

 #Job 1.0 - Build
 build:   
  runs-on: ubuntu-latest  
  #step 1 - Saludo
  steps:   
   - uses: actions/checkout@v3   
   - name: Comienzo
     run: |
       echo "Hola, comienzo de tarea final"
 
 #Job 2.0 - Integracion y Analisis con SonarCloud 
 SAST:
  runs-on: ubuntu-latest
  needs: build
  steps:
  - name: Checkout repository
    uses: actions/checkout@v3
 
  - name: Setup Node.js
    uses: actions/checkout@v3
    with:
      node-version: '14'
 
  - name: Install dependencies
    run: npm install
  
  - name: Run SonarCloud analysis
    uses: sonarsource/sonarcloud-github-action@master
    env:
      GITHUB_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#Job 3.0 - Analisis SCA con Dependency Check
 SCA:
  runs-on: ubuntu-latest
  needs: build
  steps:
  - name: Checkout code
    uses: actions/checkout@v3

  - name: Setup Node.js
    uses: actions/setup-node@v3
    with:
      node-version: '14'

  - name: Install Dependencies
    run: npm install
  
  - name: Run Dependency Check
    uses: dependency-check/Dependency-Check_Action@1.1.0
    with:
      project: 'final-lab'
      path: '.'
      format: 'HTML'

  - name: Upload Dependency Check Report
    uses: actions/upload-artifact@master
    with:
      name: dependency-check-report
      path: ${{github.workspace}}/reports

          
#Job 4.0 - Docker
 Docker:   
  runs-on: ubuntu-latest
  needs: [SAST, SCA]

  steps: 
   #Step 1- Checkout
   - name: Checkout code
     uses: actions/checkout@v3

   #Step 2- Build Docker
   - name: Build Docker image
     run: |
       docker build -t setocl/final-lab:latest .
   
   #Step 3- Login Docker
   - name: Docker Login
     uses: docker/login-action@v3.0.0
     with:
      username: ${{ secrets.DOCKER_USER }}
      password: ${{ secrets.DOCKER_PASS }}

   #Step 4- Analisis de imagen con Trivy
   - name: Run Trivy vulnerability scanner
     uses: aquasecurity/trivy-action@master
     with:
       image-ref: 'setocl/final-lab:latest'
       format: 'table'
       exit-code: '1'
       ignore-unfixed: true
       vuln-type: 'os,library'
       severity: 'CRITICAL,HIGH,MEDIUM,LOW'

   #Step 5- Push img a DockerHub
   - name: Push image to DockerHub
     run: docker push setocl/final-lab:latest

 #Job 5.0 - Deploy
 Deploy:
  needs: Docker
  runs-on: self-hosted

  #Step 1- Pull a la imagen
  steps:
  - name: Pull de la imagen Docker
    run: |
     docker pull setocl/final-lab:latest

  #Step 2- Node
  - name: Setup Node.js
    uses: actions/checkout@v3
    with:
      node-version: '14'
      
  #Step 3- npm
  - name: Install dependencies
    run: npm install

  #Step 4- Despliegue
  - name: Despliegue de la Aplicacion
    run: |
      docker run -p 8085:80 --name final-lab-deploy -d setocl/final-lab:latest

#Job ?? - Analisis GHAS
# GHAS:
#  runs-on: ubuntu-latest
#  needs: build
#  steps:
#  - name: Checkout code
#    uses: actions/checkout@v3

#  - name: Install dependencies
#    run: npm install
    
#  - name: Software Composition Analysis with GHAS
#    run: npm audit --json > npm_audit_report.json
#    shell: bash


